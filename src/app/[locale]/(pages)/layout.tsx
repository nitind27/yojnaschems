import { Metadata } from "next";
import { Suspense } from "react";
import { NextIntlClientProvider } from "next-intl"; // Import the provider


import { ToastContainer } from "react-toastify";
import { MasterInit } from "@/layout/MasterInit";
import { MasterLayout } from "@/layout/MasterLayout";
import { LayoutSplashScreen, LayoutProvider } from "@/layout/core";
import { AuthInit, AuthProvider } from "@/modules/auth";

import { LocationProvider } from "@/common/LocationComponent";
import { ScholarshipProvider } from "@/components/table/ScholarshipContext";
import { AppProvider } from "@/components/Schemes/Contaxt/AppContext";

export const metadata: Metadata = {
  title: "Yojna",
  description: "Generated by create next app",
  icons: 'https://www.weclocks.com/assets/img/favicon.png'
};

export default async function RootLayout({
  children,
  params, // Make sure to receive params for locale
}: Readonly<{
  children: React.ReactNode;
  params: { locale: string }; // Add locale parameter
}>) {
  const locale = params.locale; // Get the current locale
  let translations;

  try {
    translations = (await import(`../../../../translate/${locale}.json`))
      .default;
  } catch (error) {
    console.error("Translation file not found:", error);
    translations = {}; // Fallback to empty object if not found
  }

  return (
    <NextIntlClientProvider locale={locale} messages={translations}>
      <Suspense fallback={<LayoutSplashScreen />}>
        <LayoutProvider>
          {/* Uncomment these if needed */}
          {/* <ThemeModeProvider> */}
          {/* <ServiceProvider> */}

          <AppProvider>
            <AuthInit>
              <MasterLayout>
                <AuthProvider>
                  <ToastContainer />
                  <LocationProvider>   <ScholarshipProvider>{children}</ScholarshipProvider></LocationProvider>
                </AuthProvider>
              </MasterLayout>
              <MasterInit />
            </AuthInit>
          </AppProvider>
          {/* </ServiceProvider> */}
          {/* </ThemeModeProvider> */}
        </LayoutProvider>
      </Suspense>
    </NextIntlClientProvider>
  );
}
